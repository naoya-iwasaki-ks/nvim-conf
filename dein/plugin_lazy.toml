## deoplete
#[[plugins]]
#repo = 'Shougo/deoplete.nvim'
#depends = ['neosnippet.vim']
#on_event = 'InsertEnter'
#hook_add = '''
#let g:deoplete#enable_at_startup = 1
#let g:deoplete#auto_complete_delay = 0
#let g:deoplete#auto_complete_start_length = 2
#let g:deoplete#enable_camel_case = 0
#let g:deoplete#enable_ignore_case = 0
#let g:deoplete#enable_smart_case = 1
#let g:deoplete#enable_refresh_always = 0
#let g:deoplete#file#enable_buffer_path = 1
#let g:deoplete#max_list	 = 1000
#inoremap <expr><Tab> pumvisible()? "\<C-n>" :
#\ neosnippet#expandable_or_jumpable()? "\<plug>(neosnippet_jump_or_expand)" : "\<Tab>"
#inoremap <expr><S-Tab> pumvisible()? "\<UP>" : "\<S-Tab>"
#'''

# snippet
#[[plugins]]
#repo = 'Shougo/neosnippet.vim'
#depends = ['neosnippet-snippets', 'context_filetype.vim']
#on_event = 'InsertEnter'
#hook_source = '''
#"Plugin key-mappings.
#let g:neosnippet#snippets_directory="~/.config/nvim/neosnippet/custom_snippets"
#
#imap <C-k>     <Plug>(neosnippet_jump_or_expand)
#smap <C-k>     <Plug>(neosnippet_jump_or_expand)
#xmap <C-k>     <Plug>(neosnippet_expand_target)
#
#imap <expr><TAB>
# \ pumvisible() ? "\<C-n>" :
# \ neosnippet#expandable_or_jumpable() ?
# \    "\<Plug>(neosnippet_jump_or_expand)" : "\<TAB>"
#
#imap <expr><CR>
#\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_jump_or_expand)" : "\<CR>"
#
#
#smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
#\ "\<Plug>(neosnippet_jump_or_expand)" : "\<TAB>"
#
#"For conceal markers.
#if has('conceal')
#  set conceallevel=2 concealcursor=niv
#endif
#'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# lexima
[[plugins]]
repo = 'cohama/lexima.vim'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'

# JsDoc
[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'jsx', 'typescript', 'typescriptreact']

# emmet
[[plugins]]
repo = 'mattn/emmet-vim'
depends = ['context_filetype.vim']
on_ft = ['vue', 'javascriptreact', 'typescriptreact', 'html', 'sass', 'scss', 'css', 'ejs']
hook_source = '''
imap <C-e> <Plug>(emmet-expand-abbr)
'''
